{"version":3,"sources":["utilities/utilities.js","chartConfig/chartConfig.js","App.js","index.js"],"names":["dataIncrease","startArray","step","map","int","min","max","Math","floor","random","arrayCut","array","startOffset","endOffset","item","index","arr","length","startData","data","labels","date","days","startDate","Date","dates","i","newDate","getFullYear","getMonth","getDate","push","toDateString","dateGenerator","datasets","label","backgroundColor","options","maintainAspectRatio","scales","yAxes","scaleLabel","display","labelString","layout","padding","legend","position","tooltips","mode","elements","line","fill","App","react_default","a","createElement","className","es","ReactDOM","render","src_App","document","getElementById"],"mappings":"4KAcaA,UAAe,SAACC,EAAYC,GACvC,OAAOD,EAAWE,IAAI,SAAAC,GAAG,OAAIA,GAJYC,EAIqBD,EAAM,EAJtBE,EAIyBF,EAAM,EAHtEG,KAAKC,MAAMH,EAAME,KAAKE,UAAYH,EAAMD,EAAM,KAG6BH,EAJ1C,IAACG,EAAKC,MAMnCI,EAAW,SAACC,EAAOC,EAAaC,GAC3C,OAAOF,EAAMR,IAAI,SAACW,EAAMC,EAAOC,GAE7B,OAD2BD,EAAQH,GAAeG,GAASC,EAAIC,OAASJ,EAC5C,KAAOC,KClBjCI,EAAY,CAAC,IAAK,IAAK,IAAK,IAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAEpEC,EAAO,CAClBC,ODL2B,SAACC,EAAMC,GAGlC,IAFA,IAAMC,EAAY,IAAIC,KAAKH,GACrBI,EAAQ,GACLC,EAAI,EAAGA,EAAIJ,EAAMI,IAAK,CAC7B,IAAMC,EAAU,IAAIH,KAAKD,EAAUK,cAAeL,EAAUM,WAAYN,EAAUO,UAAYJ,GAC9FD,EAAMM,KAAKJ,EAAQK,gBAGrB,OAAOP,ECHCQ,CAAc,aAAc,IACpCC,SAAU,CACR,CACEC,MAAO,0BACPhB,KAAMT,EAASQ,EAAW,EAAG,GAC7BkB,gBAAiB,WAEnB,CACED,MAAO,0BACPhB,KAAMT,EAASV,EAAakB,EAAW,GAAI,EAAG,GAC9CkB,gBAAiB,WAEnB,CACED,MAAO,0BACPhB,KAAMT,EAASV,EAAakB,EAAW,KAAM,EAAG,GAChDkB,gBAAiB,WAEnB,CACED,MAAO,2BACPhB,KAAMT,EAASV,EAAakB,EAAW,KAAO,EAAG,GACjDkB,gBAAiB,WAEnB,CACED,MAAO,4BACPhB,KAAMT,EAASV,EAAakB,EAAW,KAAO,EAAG,GACjDkB,gBAAiB,WAEnB,CACED,MAAO,4BACPhB,KAAMT,EAASV,EAAakB,EAAW,MAAO,EAAG,GACjDkB,gBAAiB,WAEnB,CACED,MAAO,4BACPhB,KAAMT,EAASV,EAAakB,EAAW,MAAO,EAAG,GACjDkB,gBAAiB,WAEnB,CACED,MAAO,4BACPhB,KAAMT,EAASV,EAAakB,EAAW,KAAO,EAAG,GACjDkB,gBAAiB,aAKVC,EAAU,CACrBC,qBAAqB,EACrBC,OAAQ,CACNC,MAAO,CACL,CACEC,WAAY,CACVC,SAAS,EACTC,YAAa,sIAKrBC,OAAQ,CACNC,QAAS,IAEXC,OAAQ,CACNC,SAAU,SAEZC,SAAU,CACRC,KAAM,KAERC,SAAU,CACRC,KAAM,CACJC,MAAM,KCtDGC,MAbf,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,mCAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMvC,KAAMA,EAAMkB,QAASA,OCRnCsB,IAASC,OAAON,EAAAC,EAAAC,cAACK,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4f624e42.chunk.js","sourcesContent":["export const dateGenerator = (date, days) => {\r\n  const startDate = new Date(date);\r\n  const dates = [];\r\n  for (let i = 0; i < days; i++) {\r\n    const newDate = new Date(startDate.getFullYear(), startDate.getMonth(), startDate.getDate() + i);\r\n    dates.push(newDate.toDateString());\r\n  }\r\n\r\n  return dates;\r\n};\r\n\r\nexport const getRandomIntegerInDiapason = (min, max) => {\r\n  return Math.floor(min + Math.random() * (max - min + 1));\r\n};\r\nexport const dataIncrease = (startArray, step) => {\r\n  return startArray.map(int => int + getRandomIntegerInDiapason(int / 4, int / 2) + step);\r\n};\r\nexport const arrayCut = (array, startOffset, endOffset) => {\r\n  return array.map((item, index, arr) => {\r\n    const shouldElementBeCut = index < startOffset || index >= arr.length - endOffset;\r\n    return shouldElementBeCut ? null : item;\r\n  });\r\n};\r\n","import { dateGenerator, dataIncrease, arrayCut } from '../utilities/utilities';\r\n\r\nconst startData = [650, 508, 710, 1000, 960, 1200, 1500, 1750, 2100, 1850, 1700, 1550];\r\n\r\nexport const data = {\r\n  labels: dateGenerator('2019-04-19', 12),\r\n  datasets: [\r\n    {\r\n      label: 'с 0 до 3',\r\n      data: arrayCut(startData, 1, 0),\r\n      backgroundColor: '#62c4dd'\r\n    },\r\n    {\r\n      label: 'с 3 до 6',\r\n      data: arrayCut(dataIncrease(startData, 0), 1, 1),\r\n      backgroundColor: '#f66f68'\r\n    },\r\n    {\r\n      label: 'с 6 до 9',\r\n      data: arrayCut(dataIncrease(startData, 500), 1, 1),\r\n      backgroundColor: '#50ba71'\r\n    },\r\n    {\r\n      label: 'с 9 до 12',\r\n      data: arrayCut(dataIncrease(startData, 1000), 1, 1),\r\n      backgroundColor: '#fac500'\r\n    },\r\n    {\r\n      label: 'с 12 до 15',\r\n      data: arrayCut(dataIncrease(startData, 3000), 0, 1),\r\n      backgroundColor: '#21a8d9'\r\n    },\r\n    {\r\n      label: 'с 15 до 18',\r\n      data: arrayCut(dataIncrease(startData, 3500), 0, 1),\r\n      backgroundColor: '#30894a'\r\n    },\r\n    {\r\n      label: 'с 18 до 21',\r\n      data: arrayCut(dataIncrease(startData, 4500), 0, 1),\r\n      backgroundColor: '#bf4547'\r\n    },\r\n    {\r\n      label: 'с 21 до 24',\r\n      data: arrayCut(dataIncrease(startData, 6000), 1, 0),\r\n      backgroundColor: '#666666'\r\n    }\r\n  ]\r\n};\r\n\r\nexport const options = {\r\n  maintainAspectRatio: false,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: 'Количество посетителей'\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  layout: {\r\n    padding: 20\r\n  },\r\n  legend: {\r\n    position: 'right'\r\n  },\r\n  tooltips: {\r\n    mode: 'x'\r\n  },\r\n  elements: {\r\n    line: {\r\n      fill: true\r\n    }\r\n  }\r\n};\r\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport './App.css';\n\nimport { data, options } from './chartConfig/chartConfig';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <h1>Key-Group test chart</h1>\n      </header>\n      <div className='chart__container'>\n        <Line data={data} options={options} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}